# -*- coding: utf-8 -*-
"""ProjetoFinal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12ocpFe_AWWrzZuojU721hUnHsT4YXBfZ
"""

import pandas as pd

df = pd.read_csv('/content/7210_1.csv')

print(df.head(10))

import pandas as pd

df = pd.read_csv('/content/7210_1.csv')

def cor_mais_vendida(df):
    cor_mais_vendida = df['colors'].value_counts().idxmax()
    print(f'A cor mais vendida é: {cor_mais_vendida}')

def tamanho_mais_vendido(df):
    tamanho_mais_vendido = df['sizes'].value_counts().idxmax()
    print(f'O tamanho mais vendido é: {tamanho_mais_vendido}')

def categoria_mais_vendida(df):
    categoria_mais_vendida = df['categories'].value_counts().idxmax()
    print(f'A categoria mais vendida é: {categoria_mais_vendida}')

cor_mais_vendida(df)
tamanho_mais_vendido(df)
categoria_mais_vendida(df)

import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('/content/7210_1.csv')

df['prices.amountMin'] = pd.to_numeric(df['prices.amountMin'], errors='coerce')
df['prices.amountMin'].fillna(df['prices.amountMin'].mean(), inplace=True)

df

import matplotlib.pyplot as plt

df = pd.read_csv('/content/7210_1.csv')

# Converter colunas de preço para tipo numérico
df['prices.amountMin'] = pd.to_numeric(df['prices.amountMin'], errors='coerce')
df['prices.amountMax'] = pd.to_numeric(df['prices.amountMax'], errors='coerce')

# Plotar histograma de preços
plt.figure(figsize=(10, 6))
plt.hist(df['prices.amountMin'].dropna(), bins=50, alpha=0.5, label='Preço Mínimo')
plt.hist(df['prices.amountMax'].dropna(), bins=50, alpha=0.5, label='Preço Máximo')
plt.title('Distribuição de Preços')
plt.xlabel('Preço')
plt.ylabel('Frequência')
plt.legend()
plt.show()

import matplotlib.pyplot as plt

df = pd.read_csv('/content/7210_1.csv')

# Plotar gráfico de barras para as 10 categorias mais comuns
plt.figure(figsize=(12, 8))
df['categories'].value_counts().nlargest(10).plot(kind='barh')
plt.title('Top 10 Categorias Mais Comuns')
plt.xlabel('Contagem')
plt.ylabel('Categorias')
plt.show()

# Plotar gráfico de barras para os 10 tamanhos mais comuns
plt.figure(figsize=(12, 8))
df['sizes'].value_counts().nlargest(10).plot(kind='barh', color='orange')
plt.title('Top 10 Tamanhos Mais Comuns')
plt.xlabel('Contagem')
plt.ylabel('Tamanhos')
plt.show()

import pandas as pd

# Converter colunas de preço para tipo numérico
df['prices.amountMin'] = pd.to_numeric(df['prices.amountMin'], errors='coerce')
df['prices.amountMax'] = pd.to_numeric(df['prices.amountMax'], errors='coerce')

# Suponha que haja uma coluna 'quantidade_vendida' para representar a quantidade de sapatos vendidos
df['quantidade_vendida'] = pd.to_numeric(df['quantities'], errors='coerce')

# Calcular o lucro total para cada sapato
df['lucro'] = (df['prices.amountMax'] + df['prices.amountMin']) / 2 * df['quantidade_vendida']

# Encontrar o sapato que deu mais lucro
produto_mais_lucrativo = df.groupby(['name', 'categories', 'sizes'])['lucro'].sum().idxmax()

print(f'O sapato mais lucrativo é:\n{produto_mais_lucrativo}')

import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('/content/7210_1.csv')

def plotar_distribuicao_top_n(series, titulo, xlabel, ylabel, n=10, ascending=False):
    top_n = series.value_counts().nlargest(n) if not ascending else series.value_counts().nsmallest(n)
    top_n.plot(kind='bar', figsize=(10, 6))
    plt.title(titulo)
    plt.xlabel(xlabel)
    plt.ylabel(ylabel)
    plt.show()

def cor_mais_vendida(df, n=10):
    cor_mais_vendida = df['colors'].value_counts().idxmax()
    print(f'A cor mais vendida é: {cor_mais_vendida}')
    plotar_distribuicao_top_n(df['colors'], 'Top 10 Cores Mais Vendidas', 'Cores', 'Contagem', n)

def tamanho_mais_vendido(df, n=10):
    tamanho_mais_vendido = df['sizes'].value_counts().idxmax()
    print(f'O tamanho mais vendido é: {tamanho_mais_vendido}')
    plotar_distribuicao_top_n(df['sizes'], 'Top 10 Tamanhos Mais Vendidos', 'Tamanhos', 'Contagem', n)

def categoria_mais_vendida(df, n=10):
    categoria_mais_vendida = df['categories'].value_counts().idxmax()
    print(f'A categoria mais vendida é: {categoria_mais_vendida}')
    plotar_distribuicao_top_n(df['categories'], 'Top 10 Categorias Mais Vendidas', 'Categorias', 'Contagem', n)

cor_mais_vendida(df)
tamanho_mais_vendido(df)
categoria_mais_vendida(df)
